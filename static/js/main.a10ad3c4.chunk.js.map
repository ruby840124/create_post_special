{"version":3,"sources":["NumberList.js","Create_home.js","serviceWorker.js","index.js"],"names":["NumberList","props","title_text","content_text","image_content","IsImg","index","push","map","title","key","className","src","style","display","Create_home","handleSubmit","bind","handleAddPost","_handleImageChange","handleRemovePost","handleTitleChange","handleContentChange","state","home_display","add_post_display","content","file","imagePreviewUrl","e","this","setState","preventDefault","splice","length","reader","FileReader","target","files","onloadend","result","readAsDataURL","value","Swal","fire","event","$imagePreview","$imageText","onClick","icon","faComment","faTimes","onChange","cols","rows","faCloudUploadAlt","type","faEnvelope","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a10ad3c4.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nfunction NumberList(props) {\r\n\t\tconst title_text = props.title_text;\r\n\t\tconst content_text = props.content_text;\r\n\t\tconst image_content= props.image_content;\r\n\t\tlet IsImg = [];\r\n\t\tfor (var index in image_content) {\r\n\t\t\tif(image_content[index] !=\"\"){\r\n\t\t\t\tIsImg.push(\"inline\");\r\n\t\t\t}else{\r\n\t\t\t\tIsImg.push(\"none\");\r\n\t\t\t}\r\n\t\t}\r\n\t\tconst listItems = title_text.map((title,index) =>\r\n\t\t\t<div key={title+content_text[index]+index} className=\"list_css\">\r\n\t\t\t\t\t<p>{title}</p>\r\n\t\t\t\t\t<p>{content_text[index]}</p>\r\n\t\t\t\t\t<img src={image_content[index]} style={{display:IsImg[index]}} />\r\n\t\t\t</div>\r\n\t\t);\r\n\t\treturn (\r\n\t\t\tlistItems\r\n\t\t);\r\n\t}\r\n\t\r\nexport default NumberList;","import React,{ Component } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCloudUploadAlt,faComment,faTimes,faEnvelope } from '@fortawesome/free-solid-svg-icons';\r\nimport Swal from 'sweetalert2';\r\nimport NumberList from './NumberList';\r\n\r\n\r\nclass Create_home extends React.Component {\r\n\t\t//建構子\r\n\t\tconstructor(props) {\r\n\t\t\tsuper(props);\r\n\t\t\tthis.handleSubmit = this.handleSubmit.bind(this);\r\n\t\t\tthis.handleAddPost = this.handleAddPost.bind(this);\r\n\t\t\tthis._handleImageChange = this._handleImageChange.bind(this);\r\n\t\t\tthis.handleRemovePost = this.handleRemovePost.bind(this);\r\n\t\t\tthis.handleTitleChange = this.handleTitleChange.bind(this);\r\n\t\t\tthis.handleContentChange = this.handleContentChange.bind(this);\r\n\t\t\tthis.state ={home_display:'inline',add_post_display:'none',title:'',content:'Please input content.',title_text:[],content_text:[],image_content:[],file:'',imagePreviewUrl:''};\r\n\t\t}\r\n\t\t\r\n\t\t//新增資料的按鈕\r\n\t\thandleAddPost(e) {\r\n\t\t\tthis.setState({home_display:'none'});\r\n\t\t\tthis.setState({add_post_display:'inline'});\r\n\t\t\te.preventDefault();\r\n\t\t}\r\n\t\t\r\n\t\t//刪除資料的按鈕\r\n\t\thandleRemovePost(e) {\r\n\t\t\tconst title_text = this.state.title_text;\r\n\t\t\tconst content_text = this.state.content_text;\r\n\t\t\tconst image_content = this.state.image_content;\r\n\t\t\ttitle_text.splice(title_text.length-1,1);\r\n\t\t\tcontent_text.splice(content_text.length-1,1);\r\n\t\t\timage_content.splice(image_content.length-1,1);\r\n\t\t\tthis.setState({title_text:title_text ,content_text:content_text,image_content:image_content});\r\n\t\t\te.preventDefault();\r\n\t\t}\r\n\t\t\r\n\t\t//選擇圖片的按鈕\r\n\t\t_handleImageChange(e) {\r\n\t\t\te.preventDefault();\r\n\t\t\tlet reader = new FileReader();\r\n\t\t\tlet file = e.target.files[0];\r\n\r\n\t\t\treader.onloadend = () => {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\tfile: file,\r\n\t\t\t\timagePreviewUrl: reader.result\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\treader.readAsDataURL(file);\r\n\t\t\te.target.value = null;\r\n\t\t}\r\n\t\t\r\n\t\t//傳送表單(Submit)的按鈕\r\n\t\thandleSubmit(e) {\r\n\t\t\t//將列表物件顯示，表單隱藏\r\n\t\t\tthis.setState({home_display:'inline'});\r\n\t\t\tthis.setState({add_post_display:'none'});\r\n\t\t\r\n\t\t\t//增加列表元件\r\n\t\t\tconst title_text = this.state.title_text;\r\n\t\t\ttitle_text.push(this.state.title);\r\n\t\t\tconst content_text = this.state.content_text;\r\n\t\t\tcontent_text.push(this.state.content);\r\n\t\t\tconst image_content = this.state.image_content;\r\n\t\t\timage_content.push(this.state.imagePreviewUrl);\r\n\t\t\tthis.setState({title_text:title_text ,content_text:content_text,image_content:image_content});\r\n\t\t\t\r\n\t\t\t//成功送出\r\n\t\t\t//swal(\"成功!\",\"成功送出表單\",\"success\")\r\n\t\t\tSwal.fire(\"success!\",\"Successfully submit the post!\",\"success\");\r\n\t\t\t//重新預設文字\r\n\t\t\tthis.setState({title:'',content:'Please input content.',imagePreviewUrl:''});\r\n\t\t\te.preventDefault();\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\t//處理Title的文字改變\r\n\t\thandleTitleChange(event) {\r\n\t\t\tthis.setState({title:event.target.value});\r\n\t\t}\r\n\r\n\t\t//處理TextArea的文字改變\r\n\t\thandleContentChange(event) {\r\n\t\t\tthis.setState({content:event.target.value});\r\n\t\t}\r\n\r\n\r\n\t\t//到螢幕上的元件\r\n\t\trender() {\r\n\t\t\tlet {imagePreviewUrl} = this.state;\r\n\t\t\tlet $imagePreview = null;\r\n\t\t\tlet $imageText = null;\r\n\t\t\tif (imagePreviewUrl) {\r\n\t\t\t\t\t$imageText = (<p>Image Preview:</p>);\r\n\t\t\t\t\t$imagePreview = (<img src={imagePreviewUrl}/>);\r\n\t\t\t}\r\n\t\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<div style={{display:this.state.home_display}}>\r\n\t\t\t\t\t<center>\r\n\t\t\t\t\t\t<button className=\"_button\" onClick={this.handleAddPost} > <FontAwesomeIcon icon={faComment} /> Add Post</button>\r\n\t\t\t\t\t\t<button  className=\"_button\" onClick={this.handleRemovePost} ><FontAwesomeIcon icon={faTimes} /> Remove Post</button>\r\n\t\t\t\t\t\t<NumberList title_text={this.state.title_text} content_text={this.state.content_text} image_content={this.state.image_content} />\r\n\t\t\t\t\t</center>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div style={{display:this.state.add_post_display}}>\r\n\t\t\t\t\t<center>\r\n\t\t\t\t\t\t<p>Title:</p>\r\n\t\t\t\t\t\t<input  value={this.state.title} onChange={this.handleTitleChange} />\r\n\t\t\t\t\t\t<p>Content:</p>\r\n\t\t\t\t\t\t<textarea cols=\"50\" rows=\"5\" value={this.state.content} onChange={this.handleContentChange}></textarea>\r\n\t\t\t\t\t\t{$imageText}\r\n\t\t\t\t\t\t{$imagePreview}<br/><br/>\r\n\t\t\t\t\t\t<div className=\"upload-btn-wrapper\">\r\n\t\t\t\t\t\t\t<button className=\"_button\"> <FontAwesomeIcon icon={faCloudUploadAlt} /> Upload</button>\r\n\t\t\t\t\t\t\t<input type=\"file\" onChange={this._handleImageChange} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<button  className=\"_button\" onClick={this.handleSubmit} ><FontAwesomeIcon icon={faEnvelope} /> Submit</button>\r\n\t\t\t\t\t</center>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\t\r\nexport default Create_home;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Create_home from './Create_home';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(< Create_home/>,document.getElementById('root'));\r\n\r\n"],"sourceRoot":""}